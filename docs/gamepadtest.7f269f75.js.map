{"version":3,"sources":["gamepadtest/gamepadtest.js"],"names":["haveEvents","window","haveWebkitEvents","controllers","rAF","mozRequestAnimationFrame","webkitRequestAnimationFrame","requestAnimationFrame","connecthandler","e","addgamepad","gamepad","index","d","document","createElement","setAttribute","t","appendChild","createTextNode","id","b","className","i","buttons","length","innerHTML","a","axes","getElementById","style","display","body","updateStatus","disconnecthandler","removegamepad","removeChild","j","scangamepads","controller","getElementsByClassName","val","pressed","value","pct","Math","round","backgroundSize","toFixed","gamepads","navigator","getGamepads","webkitGetGamepads","addEventListener","setInterval"],"mappings":"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","file":"gamepadtest.7f269f75.js","sourceRoot":"..\\src","sourcesContent":["/*\r\n * Gamepad API Test\r\n * Written in 2013 by Ted Mielczarek <ted@mielczarek.org>\r\n *\r\n * To the extent possible under law, the author(s) have dedicated all copyright and related and neighboring rights to this software to the public domain worldwide. This software is distributed without any warranty.\r\n *\r\n * You should have received a copy of the CC0 Public Domain Dedication along with this software. If not, see <http://creativecommons.org/publicdomain/zero/1.0/>.\r\n */\r\nvar haveEvents = 'GamepadEvent' in window;\r\nvar haveWebkitEvents = 'WebKitGamepadEvent' in window;\r\nvar controllers = {};\r\nvar rAF = window.mozRequestAnimationFrame ||\r\n  window.webkitRequestAnimationFrame ||\r\n  window.requestAnimationFrame;\r\n\r\nfunction connecthandler(e) {\r\n  addgamepad(e.gamepad);\r\n}\r\nfunction addgamepad(gamepad) {\r\n  controllers[gamepad.index] = gamepad; var d = document.createElement(\"div\");\r\n  d.setAttribute(\"id\", \"controller\" + gamepad.index);\r\n  var t = document.createElement(\"h1\");\r\n  t.appendChild(document.createTextNode(\"gamepad: \" + gamepad.id));\r\n  d.appendChild(t);\r\n  var b = document.createElement(\"div\");\r\n  b.className = \"buttons\";\r\n  for (var i=0; i<gamepad.buttons.length; i++) {\r\n    var e = document.createElement(\"span\");\r\n    e.className = \"button\";\r\n    //e.id = \"b\" + i;\r\n    e.innerHTML = i;\r\n    b.appendChild(e);\r\n  }\r\n  d.appendChild(b);\r\n  var a = document.createElement(\"div\");\r\n  a.className = \"axes\";\r\n  for (i=0; i<gamepad.axes.length; i++) {\r\n    e = document.createElement(\"meter\");\r\n    e.className = \"axis\";\r\n    //e.id = \"a\" + i;\r\n    e.setAttribute(\"min\", \"-1\");\r\n    e.setAttribute(\"max\", \"1\");\r\n    e.setAttribute(\"value\", \"0\");\r\n    e.innerHTML = i;\r\n    a.appendChild(e);\r\n  }\r\n  d.appendChild(a);\r\n  document.getElementById(\"start\").style.display = \"none\";\r\n  document.body.appendChild(d);\r\n  rAF(updateStatus);\r\n}\r\n\r\nfunction disconnecthandler(e) {\r\n  removegamepad(e.gamepad);\r\n}\r\n\r\nfunction removegamepad(gamepad) {\r\n  var d = document.getElementById(\"controller\" + gamepad.index);\r\n  document.body.removeChild(d);\r\n  delete controllers[gamepad.index];\r\n}\r\n\r\nfunction updateStatus() {\r\n  scangamepads();\r\n  for (j in controllers) {\r\n    var controller = controllers[j];\r\n    var d = document.getElementById(\"controller\" + j);\r\n    var buttons = d.getElementsByClassName(\"button\");\r\n    for (var i=0; i<controller.buttons.length; i++) {\r\n      var b = buttons[i];\r\n      var val = controller.buttons[i];\r\n      var pressed = val == 1.0;\r\n      if (typeof(val) == \"object\") {\r\n        pressed = val.pressed;\r\n        val = val.value;\r\n      }\r\n      var pct = Math.round(val * 100) + \"%\";\r\n      b.style.backgroundSize = pct + \" \" + pct;\r\n      if (pressed) {\r\n        b.className = \"button pressed\";\r\n      } else {\r\n        b.className = \"button\";\r\n      }\r\n    }\r\n\r\n    var axes = d.getElementsByClassName(\"axis\");\r\n    for (var i=0; i<controller.axes.length; i++) {\r\n      var a = axes[i];\r\n      a.innerHTML = i + \": \" + controller.axes[i].toFixed(4);\r\n      a.setAttribute(\"value\", controller.axes[i]);\r\n    }\r\n  }\r\n  rAF(updateStatus);\r\n}\r\n\r\nfunction scangamepads() {\r\n  var gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n  for (var i = 0; i < gamepads.length; i++) {\r\n    if (gamepads[i]) {\r\n      if (!(gamepads[i].index in controllers)) {\r\n        addgamepad(gamepads[i]);\r\n      } else {\r\n        controllers[gamepads[i].index] = gamepads[i];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nif (haveEvents) {\r\n  window.addEventListener(\"gamepadconnected\", connecthandler);\r\n  window.addEventListener(\"gamepaddisconnected\", disconnecthandler);\r\n} else if (haveWebkitEvents) {\r\n  window.addEventListener(\"webkitgamepadconnected\", connecthandler);\r\n  window.addEventListener(\"webkitgamepaddisconnected\", disconnecthandler);\r\n} else {\r\n  setInterval(scangamepads, 500);\r\n}"]}