{"version":3,"sources":["phasertest/phasertest.js"],"names":["text","config","type","Phaser","WEBGL","parent","width","height","input","gamepad","scene","preload","create","update","game","Game","add","font","fill","on","pad","console","log","total","debug","pads","gamepads","i","length","push","id","index","timestamp","buttons","b","button","concat","value","axes","a","axis","getValue","setText"],"mappings":";AAAA,IAeIA,EAfAC,EAAS,CACTC,KAAMC,OAAOC,MACbC,OAAQ,iBACRC,MAAO,IACPC,OAAQ,IACRC,MAAO,CACHC,SAAS,GAEbC,MAAO,CACHC,QAASA,EACTC,OAAQA,EACRC,OAAQA,IAMZC,EAAO,IAAIX,OAAOY,KAAKd,GAE3B,SAASU,KAKT,SAASC,IAILZ,EAAO,KAAKgB,IAAIhB,KAAK,GAAI,GAAI,GAAI,CAAEiB,KAAM,eAAgBC,KAAM,YAC1DV,KAAAA,MAAMC,QAAQU,GAAG,YAAa,SAACC,GAChCC,QAAQC,IAAI,cAAeF,KAInC,SAASP,IAED,GAA6B,IAA7B,KAAKL,MAAMC,QAAQc,MAAnB,CAUC,IALDC,IAAAA,EAAQ,GACRC,EAAO,KAAKjB,MAAMC,QAAQiB,SAIrBC,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IACjC,CACQP,IAAAA,EAAMK,EAAKE,GAEX,GAACP,EAAD,CAMJI,EAAMK,KAAKT,EAAIU,IACfN,EAAMK,KAAK,UAAYT,EAAIW,MAAQ,eAAiBX,EAAIY,WAMnD,IAFDC,IAAAA,EAAU,GAELC,EAAI,EAAGA,EAAId,EAAIa,QAAQL,OAAQM,IACxC,CACQC,IAAAA,EAASf,EAAIa,QAAQC,GAEzBD,EAAUA,EAAQG,OAAO,IAAMD,EAAOJ,MAAQ,KAAOI,EAAOE,MAAQ,MAG1D,IAANH,IAEAV,EAAMK,KAAKI,GACXA,EAAU,IAIlBT,EAAMK,KAAKI,GAMN,IAFDK,IAAAA,EAAO,GAEFC,EAAI,EAAGA,EAAInB,EAAIkB,KAAKV,OAAQW,IACrC,CACQC,IAAAA,EAAOpB,EAAIkB,KAAKC,GAEpBD,EAAOA,EAAKF,OAAO,IAAMI,EAAKT,MAAQ,KAAOS,EAAKC,WAAa,MAGrD,IAANF,IAEAf,EAAMK,KAAKS,GACXA,EAAO,IAIfd,EAAMK,KAAKS,GACXd,EAAMK,KAAK,KAGf7B,EAAK0C,QAAQlB","file":"phasertest.d2211de0.js","sourceRoot":"..\\src","sourcesContent":["var config = {\r\n    type: Phaser.WEBGL,\r\n    parent: 'phaser-example',\r\n    width: 800,\r\n    height: 600,\r\n    input: {\r\n        gamepad: true\r\n    },\r\n    scene: {\r\n        preload: preload,\r\n        create: create,\r\n        update: update\r\n    }\r\n};\r\n\r\nvar text;\r\n\r\nvar game = new Phaser.Game(config);\r\n\r\nfunction preload ()\r\n{\r\n    //this.load.image('sky', 'assets/skies/lightblue.png');\r\n}\r\n\r\nfunction create ()\r\n{\r\n    //this.add.image(0, 0, 'sky').setOrigin(0);\r\n\r\n    text = this.add.text(10, 30, '', { font: '16px Courier', fill: '#ffffff' });\r\n    this.input.gamepad.on('connected', (pad) => {\r\n        console.log('connected: ', pad);\r\n    });\r\n}\r\n\r\nfunction update ()\r\n{\r\n    if (this.input.gamepad.total === 0)\r\n    {\r\n        return;\r\n    }\r\n\r\n    var debug = [];\r\n    var pads = this.input.gamepad.gamepads;\r\n    // var pads = this.input.gamepad.getAll();\r\n    // var pads = navigator.getGamepads();\r\n\r\n    for (var i = 0; i < pads.length; i++)\r\n    {\r\n        var pad = pads[i];\r\n\r\n        if (!pad)\r\n        {\r\n            continue;\r\n        }\r\n\r\n        //  Timestamp, index. ID\r\n        debug.push(pad.id);\r\n        debug.push('Index: ' + pad.index + ' Timestamp: ' + pad.timestamp);\r\n\r\n        //  Buttons\r\n\r\n        var buttons = '';\r\n\r\n        for (var b = 0; b < pad.buttons.length; b++)\r\n        {\r\n            var button = pad.buttons[b];\r\n\r\n            buttons = buttons.concat('B' + button.index + ': ' + button.value + '  ');\r\n            // buttons = buttons.concat('B' + b + ': ' + button.value + '  ');\r\n\r\n            if (b === 8)\r\n            {\r\n                debug.push(buttons);\r\n                buttons = '';\r\n            }\r\n        }\r\n        \r\n        debug.push(buttons);\r\n\r\n        //  Axis\r\n\r\n        var axes = '';\r\n\r\n        for (var a = 0; a < pad.axes.length; a++)\r\n        {\r\n            var axis = pad.axes[a];\r\n\r\n            axes = axes.concat('A' + axis.index + ': ' + axis.getValue() + '  ');\r\n            // axes = axes.concat('A' + a + ': ' + axis + '  ');\r\n\r\n            if (a === 1)\r\n            {\r\n                debug.push(axes);\r\n                axes = '';\r\n            }\r\n        }\r\n        \r\n        debug.push(axes);\r\n        debug.push('');\r\n    }\r\n    \r\n    text.setText(debug);\r\n}\r\n"]}